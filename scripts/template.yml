apiVersion: v1
kind: Template
metadata:
  name: rhmi-lab-nodejs-order-ui
  displayName: RHMI Lab Node.js Frontend and API
  annotations:
    openshift.io/display-name: RHMI Lab Node.js Frontend & API
    description: "The external order UI and API that's used in RHMI Solution Patterns"
    iconClass: "icon-nodejs"
    tags: "rhmi,nodejs"
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: rhmi-lab-nodejs-order-frontend
    name: rhmi-lab-nodejs-order-frontend
  spec:
    replicas: 1
    selector:
      app: rhmi-lab-nodejs-order-frontend
      deploymentconfig: rhmi-lab-nodejs-order-frontend
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: rhmi-lab-nodejs-order-frontend
          deploymentconfig: rhmi-lab-nodejs-order-frontend
      spec:
        containers:
        - env:
          - name: MESSAGING_SERVICE_HOST
            value: ${MESSAGING_SERVICE_HOST}
          - name: MESSAGING_SERVICE_USER
            value: ${MESSAGING_SERVICE_USER}
          - name: MESSAGING_SERVICE_PASSWORD
            value: ${MESSAGING_SERVICE_PASSWORD}
          - name: MESSAGING_SERVICE_PORT
            value: ${MESSAGING_SERVICE_PORT}
          image: quay.io/integreatly/rhmi-lab-nodejs-order-frontend
          imagePullPolicy: Always
          name: rhmi-lab-nodejs-order-frontend
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: rhmi-lab-nodejs-order-frontend
    name: rhmi-lab-nodejs-order-frontend
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: rhmi-lab-nodejs-order-frontend
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: order-entry-ui
    name: order-entry-ui
  spec:
    port:
      targetPort: 8080-tcp
    tls:
      termination: edge
    to:
      kind: Service
      name: rhmi-lab-nodejs-order-frontend
      weight: 100
    wildcardPolicy: None
parameters:
- description: The hostname of the AMQ Online broker orders are sent to
  displayName: AMQ Online Broker Hostname
  required: true
  name: MESSAGING_SERVICE_HOST
- description: The username required to connect to the broker
  displayName:  AMQ Online Broker Username
  required: true
  name: MESSAGING_SERVICE_USER
- description: The password required to connect to the broker
  displayName: AMQ Online Broker Password
  required: true
  name: MESSAGING_SERVICE_PASSWORD
- description: The port to connect to on the broker
  displayName: AMQ Online Broker Port
  value: "5672"
  name: MESSAGING_SERVICE_PORT
